/*
 * Lagrello API
 * API specification for Lagrello, a simple to use authentication service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@lagrello.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ActivateTenantRequest;
import org.openapitools.client.model.CreateTenantRequest;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.Tenant;
import org.openapitools.client.model.UpdateTenantRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TenantsApi
 */
@Ignore
public class TenantsApiTest {

    private final TenantsApi api = new TenantsApi();

    
    /**
     * Updates tenant information
     *
     * This endpoint is used to update certain information about your tenant. For example if you want to update your tenant&#39;s callback URL you will do that here.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tenantUpdateTest() throws ApiException {
        UpdateTenantRequest updateTenantRequest = null;
        Tenant response = api.tenantUpdate(updateTenantRequest);

        // TODO: test validations
    }
    
    /**
     * Activates the tenant, checks that all necessary information to activate a tenant is included
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tenantsActivateTest() throws ApiException {
        ActivateTenantRequest activateTenantRequest = null;
        Tenant response = api.tenantsActivate(activateTenantRequest);

        // TODO: test validations
    }
    
    /**
     * Creates new tenant
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tenantsCreateTest() throws ApiException {
        CreateTenantRequest createTenantRequest = null;
        Tenant response = api.tenantsCreate(createTenantRequest);

        // TODO: test validations
    }
    
    /**
     * Deletes tenant caller is part of, will send verification email before deleting tenant
     *
     * This endpoint will delete your tenant. Will send an email to the admin email address of the tenant confirming that you want to delete your tenant before deletion.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tenantsCreate_0Test() throws ApiException {
        Tenant response = api.tenantsCreate_0();

        // TODO: test validations
    }
    
    /**
     * Returns the tenant information the caller is part of
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tenantsGetTest() throws ApiException {
        Tenant response = api.tenantsGet();

        // TODO: test validations
    }
    
}
